// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorldsPage renders without errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WorldsPage
    store={
      Object {
        "worldStore": Object {
          "expand": [Function],
          "remove": [Function],
          "worldsList": Array [
            Object {
              "canvas": Object {},
              "id": "27d0e393-6171-48fc-9c13-94eeef3edb7c",
              "name": "test",
              "regions": Object {
                "7aa3e17d-d1ab-4785-8afd-20f37a20c53f": Object {
                  "id": "7aa3e17d-d1ab-4785-8afd-20f37a20c53f",
                  "rendered": false,
                  "state": "edge",
                  "tiles": undefined,
                  "x": -150,
                  "y": -153,
                  "z": 303,
                },
                "b545cf2a-484a-4dd5-b79c-9100dd1d2cde": Object {
                  "id": "b545cf2a-484a-4dd5-b79c-9100dd1d2cde",
                  "rendered": false,
                  "state": "ready",
                  "tiles": undefined,
                  "x": -151,
                  "y": -1,
                  "z": 152,
                },
              },
              "size": 4,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Grid)
          container={true}
          justify="center"
          spacing={16}
        >
          <WithStyles(Grid)
            item={true}
            sm={8}
            xs={12}
          >
            <WithStyles(Card)
              className="item"
            >
              <WithStyles(CardContent)>
                <WithStyles(Typography)
                  type="title"
                >
                  <Link
                    className="link"
                    replace={false}
                    to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                  >
                    test
                  </Link>
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  type="body1"
                >
                  <span>
                    state: 
                    ready
                  </span>
                   / 
                  <span>
                    regions: 
                    2
                  </span>
                </WithStyles(Typography)>
                <div
                  className="actions"
                >
                  <WithStyles(IconButton)
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(ZoomOutMapIcon) />
                  </WithStyles(IconButton)>
                  <WithStyles(IconButton)
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        <BottomNavigation>
          <inject-WorldDialog-with-store />
        </BottomNavigation>,
      ],
      "className": "list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
              sm={8}
              xs={12}
            >
              <WithStyles(Card)
                className="item"
              >
                <WithStyles(CardContent)>
                  <WithStyles(Typography)
                    type="title"
                  >
                    <Link
                      className="link"
                      replace={false}
                      to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                    >
                      test
                    </Link>
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    type="body1"
                  >
                    <span>
                      state: 
                      ready
                    </span>
                     / 
                    <span>
                      regions: 
                      2
                    </span>
                  </WithStyles(Typography)>
                  <div
                    className="actions"
                  >
                    <WithStyles(IconButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      <pure(ZoomOutMapIcon) />
                    </WithStyles(IconButton)>
                    <WithStyles(IconButton)
                      onClick={[Function]}
                    >
                      <pure(DeleteIcon) />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(CardContent)>
              </WithStyles(Card)>
            </WithStyles(Grid)>,
          ],
          "container": true,
          "justify": "center",
          "spacing": 16,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "27d0e393-6171-48fc-9c13-94eeef3edb7c",
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Card)
                className="item"
              >
                <WithStyles(CardContent)>
                  <WithStyles(Typography)
                    type="title"
                  >
                    <Link
                      className="link"
                      replace={false}
                      to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                    >
                      test
                    </Link>
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    type="body1"
                  >
                    <span>
                      state: 
                      ready
                    </span>
                     / 
                    <span>
                      regions: 
                      2
                    </span>
                  </WithStyles(Typography)>
                  <div
                    className="actions"
                  >
                    <WithStyles(IconButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      <pure(ZoomOutMapIcon) />
                    </WithStyles(IconButton)>
                    <WithStyles(IconButton)
                      onClick={[Function]}
                    >
                      <pure(DeleteIcon) />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(CardContent)>
              </WithStyles(Card)>,
              "item": true,
              "sm": 8,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(CardContent)>
                  <WithStyles(Typography)
                    type="title"
                  >
                    <Link
                      className="link"
                      replace={false}
                      to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                    >
                      test
                    </Link>
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    type="body1"
                  >
                    <span>
                      state: 
                      ready
                    </span>
                     / 
                    <span>
                      regions: 
                      2
                    </span>
                  </WithStyles(Typography)>
                  <div
                    className="actions"
                  >
                    <WithStyles(IconButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      <pure(ZoomOutMapIcon) />
                    </WithStyles(IconButton)>
                    <WithStyles(IconButton)
                      onClick={[Function]}
                    >
                      <pure(DeleteIcon) />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(CardContent)>,
                "className": "item",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Typography)
                      type="title"
                    >
                      <Link
                        className="link"
                        replace={false}
                        to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                      >
                        test
                      </Link>
                    </WithStyles(Typography)>,
                    <WithStyles(Typography)
                      type="body1"
                    >
                      <span>
                        state: 
                        ready
                      </span>
                       / 
                      <span>
                        regions: 
                        2
                      </span>
                    </WithStyles(Typography)>,
                    <div
                      className="actions"
                    >
                      <WithStyles(IconButton)
                        disabled={false}
                        onClick={[Function]}
                      >
                        <pure(ZoomOutMapIcon) />
                      </WithStyles(IconButton)>
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(DeleteIcon) />
                      </WithStyles(IconButton)>
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Link
                        className="link"
                        replace={false}
                        to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                      >
                        test
                      </Link>,
                      "type": "title",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "test",
                        "className": "link",
                        "replace": false,
                        "to": "/world/27d0e393-6171-48fc-9c13-94eeef3edb7c",
                      },
                      "ref": null,
                      "rendered": "test",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <span>
                          state: 
                          ready
                        </span>,
                        " / ",
                        <span>
                          regions: 
                          2
                        </span>,
                      ],
                      "type": "body1",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "state: ",
                            "ready",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          "state: ",
                          "ready",
                        ],
                        "type": "span",
                      },
                      " / ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "regions: ",
                            2,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          "regions: ",
                          2,
                        ],
                        "type": "span",
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <WithStyles(IconButton)
                          disabled={false}
                          onClick={[Function]}
                        >
                          <pure(ZoomOutMapIcon) />
                        </WithStyles(IconButton)>,
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(DeleteIcon) />
                        </WithStyles(IconButton)>,
                      ],
                      "className": "actions",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(ZoomOutMapIcon) />,
                          "disabled": false,
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(DeleteIcon) />,
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <inject-WorldDialog-with-store />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            container={true}
            justify="center"
            spacing={16}
          >
            <WithStyles(Grid)
              item={true}
              sm={8}
              xs={12}
            >
              <WithStyles(Card)
                className="item"
              >
                <WithStyles(CardContent)>
                  <WithStyles(Typography)
                    type="title"
                  >
                    <Link
                      className="link"
                      replace={false}
                      to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                    >
                      test
                    </Link>
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    type="body1"
                  >
                    <span>
                      state: 
                      ready
                    </span>
                     / 
                    <span>
                      regions: 
                      2
                    </span>
                  </WithStyles(Typography)>
                  <div
                    className="actions"
                  >
                    <WithStyles(IconButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      <pure(ZoomOutMapIcon) />
                    </WithStyles(IconButton)>
                    <WithStyles(IconButton)
                      onClick={[Function]}
                    >
                      <pure(DeleteIcon) />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(CardContent)>
              </WithStyles(Card)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>,
          <BottomNavigation>
            <inject-WorldDialog-with-store />
          </BottomNavigation>,
        ],
        "className": "list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Grid)
                item={true}
                sm={8}
                xs={12}
              >
                <WithStyles(Card)
                  className="item"
                >
                  <WithStyles(CardContent)>
                    <WithStyles(Typography)
                      type="title"
                    >
                      <Link
                        className="link"
                        replace={false}
                        to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                      >
                        test
                      </Link>
                    </WithStyles(Typography)>
                    <WithStyles(Typography)
                      type="body1"
                    >
                      <span>
                        state: 
                        ready
                      </span>
                       / 
                      <span>
                        regions: 
                        2
                      </span>
                    </WithStyles(Typography)>
                    <div
                      className="actions"
                    >
                      <WithStyles(IconButton)
                        disabled={false}
                        onClick={[Function]}
                      >
                        <pure(ZoomOutMapIcon) />
                      </WithStyles(IconButton)>
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(DeleteIcon) />
                      </WithStyles(IconButton)>
                    </div>
                  </WithStyles(CardContent)>
                </WithStyles(Card)>
              </WithStyles(Grid)>,
            ],
            "container": true,
            "justify": "center",
            "spacing": 16,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "27d0e393-6171-48fc-9c13-94eeef3edb7c",
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Card)
                  className="item"
                >
                  <WithStyles(CardContent)>
                    <WithStyles(Typography)
                      type="title"
                    >
                      <Link
                        className="link"
                        replace={false}
                        to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                      >
                        test
                      </Link>
                    </WithStyles(Typography)>
                    <WithStyles(Typography)
                      type="body1"
                    >
                      <span>
                        state: 
                        ready
                      </span>
                       / 
                      <span>
                        regions: 
                        2
                      </span>
                    </WithStyles(Typography)>
                    <div
                      className="actions"
                    >
                      <WithStyles(IconButton)
                        disabled={false}
                        onClick={[Function]}
                      >
                        <pure(ZoomOutMapIcon) />
                      </WithStyles(IconButton)>
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(DeleteIcon) />
                      </WithStyles(IconButton)>
                    </div>
                  </WithStyles(CardContent)>
                </WithStyles(Card)>,
                "item": true,
                "sm": 8,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(CardContent)>
                    <WithStyles(Typography)
                      type="title"
                    >
                      <Link
                        className="link"
                        replace={false}
                        to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                      >
                        test
                      </Link>
                    </WithStyles(Typography)>
                    <WithStyles(Typography)
                      type="body1"
                    >
                      <span>
                        state: 
                        ready
                      </span>
                       / 
                      <span>
                        regions: 
                        2
                      </span>
                    </WithStyles(Typography)>
                    <div
                      className="actions"
                    >
                      <WithStyles(IconButton)
                        disabled={false}
                        onClick={[Function]}
                      >
                        <pure(ZoomOutMapIcon) />
                      </WithStyles(IconButton)>
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(DeleteIcon) />
                      </WithStyles(IconButton)>
                    </div>
                  </WithStyles(CardContent)>,
                  "className": "item",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Typography)
                        type="title"
                      >
                        <Link
                          className="link"
                          replace={false}
                          to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                        >
                          test
                        </Link>
                      </WithStyles(Typography)>,
                      <WithStyles(Typography)
                        type="body1"
                      >
                        <span>
                          state: 
                          ready
                        </span>
                         / 
                        <span>
                          regions: 
                          2
                        </span>
                      </WithStyles(Typography)>,
                      <div
                        className="actions"
                      >
                        <WithStyles(IconButton)
                          disabled={false}
                          onClick={[Function]}
                        >
                          <pure(ZoomOutMapIcon) />
                        </WithStyles(IconButton)>
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(DeleteIcon) />
                        </WithStyles(IconButton)>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Link
                          className="link"
                          replace={false}
                          to="/world/27d0e393-6171-48fc-9c13-94eeef3edb7c"
                        >
                          test
                        </Link>,
                        "type": "title",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "test",
                          "className": "link",
                          "replace": false,
                          "to": "/world/27d0e393-6171-48fc-9c13-94eeef3edb7c",
                        },
                        "ref": null,
                        "rendered": "test",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <span>
                            state: 
                            ready
                          </span>,
                          " / ",
                          <span>
                            regions: 
                            2
                          </span>,
                        ],
                        "type": "body1",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "state: ",
                              "ready",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "state: ",
                            "ready",
                          ],
                          "type": "span",
                        },
                        " / ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "regions: ",
                              2,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "regions: ",
                            2,
                          ],
                          "type": "span",
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <WithStyles(IconButton)
                            disabled={false}
                            onClick={[Function]}
                          >
                            <pure(ZoomOutMapIcon) />
                          </WithStyles(IconButton)>,
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(DeleteIcon) />
                          </WithStyles(IconButton)>,
                        ],
                        "className": "actions",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <pure(ZoomOutMapIcon) />,
                            "disabled": false,
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <pure(DeleteIcon) />,
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <inject-WorldDialog-with-store />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
